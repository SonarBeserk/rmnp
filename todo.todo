Canceled tasks:
    ✘ Messages (https://gafferongames.com/post/reliable_ordered_messages/) @cancelled (2017-11-5 21:29:25) // too complicated and unnecessary (will never be able to bundle up small packets in time)
    ✘ Packet fragmentation support for all reliable channels (MTU) @cancelled (2017-11-9 17:29:33) // too overkill and unnecessary atm
    ✘ Large Packet sends? (https://gafferongames.com/post/sending_large_blocks_of_data/) @cancelled (2017-11-9 17:29:34) // too overkill and unnecessary atm
    ✘ Encryption @cancelled (2017-11-12 17:54:59) // too complicated, unnecessary and also unnecessarily performance intensive on mobile devices
    ✘ flood protection @cancelled (2017-11-15 20:06:17) // maybe think about if it becomes a problem (which is very unlikely)
    ✘ DoS protection @cancelled (2017-11-11 15:02:10) // https://www.ovh.de/anti-ddos/abwehr.xml
    ✘ handle acks outside of ack_bits range @cancelled (2017-11-6 20:59:54) // chose to just stop resending them after a certain amount of time => very likely that is was delivered
    ✘ use atomics? @cancelled (2017-11-18 17:28:26) // maybe later if proven necessary
    ✘ use lock-free data structure? (no mutexes) @cancelled (2017-11-17 22:58:54) // not necessary at the moment (probably never will)

Problems:
    ☐ if a lot of packets are stored due to very high packet drop (e.g. 100%) a lot of packets will most likely not be acked (therefore may not arrive)
        ☐ may be problematic with to small sequence buffer when old resend packets override newer ones in the same buffer slot
        ☐ try to limit packet send when too many are stored (kind of congestion control) but ensure to not mimic tcp's bad behaviour
        ☐ problematic if they "stuck" in sendMap and occupie memory
        ☐ MaxPacketResends will get stuck resending the same packest on high packet loss => may cause even further congestion
    ☐ if there is too much packet loss and ordered packets do not get through, they pile up and can potentionally interfere with the PacketChain (should at least not crash)
        ☐ packet chain could get large with only a few elements missing (should consider max timeout and than execute order as it is present)

Library:
    ☐ tests?
    ☐ Remove/replace logs with useful once
    ☐ Documentation & Comments

Code Review:
    ☐ no unnecessary copies?
    ☐ data passed between go-routines correctly handled in context?
    ☐ profile & memory leak/pooling check
    ☐ profile StatSendBytes & StatReceivedBytes